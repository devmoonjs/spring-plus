name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker image and push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          REGION="ap-northeast-2"
          ECR_REPOSITORY="spring-plus"
          IMAGE_TAG="latest"
          
          # ECR 로그인 후 도커 이미지 빌드 및 ECR 푸시
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Execute remote SSH commands on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            REGION="ap-northeast-2"
            ECR_REPOSITORY="spring-plus"
            IMAGE_TAG="latest"
            AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
            
            # Docker 컨테이너 중지 및 삭제 (기존 컨테이너가 있다면)
            docker stop spring-plus || true
            docker rm spring-plus || true
            
            # ECR에서 최신 이미지 가져오기
            aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
            docker pull $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
            # 새 컨테이너 실행
            docker run -d --name spring-plus -p 80:8080 \
              -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
              -e S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }} \
              -e S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }} \
              $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG \


